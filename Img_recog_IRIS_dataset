# -*- coding: utf-8 -*-
"""
Created on Thu May 30 12:18:33 2019

@author: Sanchi
"""

import matplotlib.pyplpot as plt
import pandas as pd
import numpy as np

x = np.arange(-10, 10, 0.01)# generate numbers from -10 to 10 with 0.01 step size
sig_1 = 1 / (1 + np.power(np.e, -x))
sig_2 = np.power(np.e, -x) / (1 + np.power(np.e, -x))# formula for sigmoid function

plt.plot(x, sig_1)
plt.show()

plt.plot(x, sig_2)
plt.show()

line = 3 * x + 4

plt.plot(x, line)
plt.show()


sig_line = 1 / (1 + np.power(np.e, -line))

plt.plot(x, sig_line)
plt.show()

from sklearn.datasets import load_iris# inbuild in sklearn
dataset = load_iris()

X = dataset.data
y = dataset.target


plt.scatter(X[y == 0, 0], X[y == 0, 1], c = "r", label = "Satosa")
plt.scatter(X[y == 1, 0], X[y == 1, 1], c = "b", label = "Versicolor")
plt.scatter(X[y == 2, 0], X[y == 2, 1], c = "g", label = "Verginica")
plt.xlabel('Sepal Length')
plt.ylabel('Sepal Width')
plt.title('Analysis on the iris Dataset')
plt.legend()
plt.show()


plt.scatter(X[y == 0, 2], X[y == 0, 3], c = "r", label = "Satosa")
plt.scatter(X[y == 1, 2], X[y == 1, 3], c = "b", label = "Versicolor")
plt.scatter(X[y == 2, 2], X[y == 2, 3], c = "g", label = "Verginica")
plt.xlabel('Petal Length')
plt.ylabel('Petal Width')
plt.title('Analysis on the iris Dataset')
plt.legend()
plt.show()

from sklearn.model_selection import train_test_split
X_test, X_train, y_test, y_train = train_test_split(X, y)

from sklearn.linear_model import LogisticRegression
log_reg = LogisticRegression()
log_reg.fit(X_train, y_train)

log_reg.score(X_train, y_train)
log_reg.score(X_test, y_test)
log_reg.score(X, y)
y_pred = log_reg.predict(X_test)

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)

from sklearn.metrics import precision_score, recall_score, f1_score
precision_score(y_test, y_pred, average = 'micro')
recall_score(y_test, y_pred, average = 'micro')
f1_score(y_test, y_pred, average = 'micro')
